Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб.

JSON
 4. Создать внешний репозиторий c названием JSON.-- Create a new repository (https://github.com/new)  
 5. Клонировать репозиторий JSON на локальный компьютер.--git clone https://github.com/Samuseu/JSON.git
 6. Внутри локального JSON создать файл “new.json”.--touch new.json
 7. Добавить файл под гит.--$ git add new.json
 8. Закоммитить файл.--$ git commit -m "dz_1"
 9. Отправить файл на внешний GitHub репозиторий.--
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
--vim new.json
{
       	"name": "Самусев Владисла Александрович",
       	"age": "27",
       	"animal": "0",
       	"money": "1000$"
       	}
 11. Отправить изменения на внешний репозиторий.--$ git commit -am "dz" git pus
 12. Создать файл preferences.json--touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
--code preferences.json
{
	"film": "marvel trilogy",
	"serial": "во все тяжкие",
	"eat": "pizza",
	"season": "winter",
	"sity": "usa"
}	
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
--code skills.json
{
	"skills": "Инструменты тестирования, логи, базы данных , баг репорты, и тд."	
}
 15. Отправить сразу 2 файла на внешний репозиторий.--git push
 16. На веб интерфейсе создать файл bug_report.json.-- add file -> create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--Commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.--edit this file
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON--git pull


XML
 21. Создать внешний репозиторий c названием XML.-- Create a new repository (https://github.com/new)
 22. Клонировать репозиторий XML на локальный компьютер.--git clone https://github.com/Samuseu/XML.git
 23. Внутри локального XML создать файл “new.xml”.--touch new.xml
 24. Добавить файл под гит.--$ git add new.xml 
 25. Закоммитить файл.--$ git commit -m "xml"
 26. Отправить файл на внешний GitHub репозиторий.--$ git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
-- $ vim new.xml
<?xml version="1.0" encoding="utf-8"?>
<note>
        <name>Самусев Владислав Александрович<name>
        <age>27<age>
        <animal>0<animal>
        <money>1000$<money>
<note>
 28. Отправить изменения на внешний репозиторий.--$ git commit -am "modified"   git push
 29. Создать файл preferences.xml--$ touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
--code preferences.xml
<?xml version="1.0" encoding="utf-8"?>
<note>
	<film>marvel trilogy<film>
	<serial>во все тяжкие<serial>
	<eat>pizza<eat>
	<season>winter<season>
	<sity>usa<sity>
<note>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML-- code skills.xml
<?xml version="1.0" encoding="utf-8"?>
<note>
        <skills>Инструменты тестирования, логи, базы данных , баг репорты, и тд<skills>
<note>

 32. Сделать коммит в одну строку.$ git add ./  $ git commit -am "dz_1"
 33. Отправить сразу 2 файла на внешний репозиторий.--git push
 34. На веб интерфейсе создать файл bug_report.xml.-- add file -> create new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--Commit changes
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.--edit this file
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML-- $ git pull

TXT
 1. Создать внешний репозиторий c названием TXT.-- Create a new repository (https://github.com/new)
 2. Клонировать репозиторий TXT на локальный компьютер.--$ git clone https://github.com/Samuseu/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.--$ touch new.txt
 4. Добавить файл под гит.--$ git add new.txt
 5. Закоммитить файл.--$ git commit -m "dz_1"
 6. Отправить файл на внешний GitHub репозиторий.--$ git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
--vim new.txt 
1)Самусев Владислав Александрович,
2) 27лет,
3) 0,
4)1000$
 8. Отправить изменения на внешний репозиторий.$ git commit -am "dz" git push
 9. Создать файл preferences.txt--$ touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
--code preferences.txt
1)film-marvel trilogy
2)serial-во все тяжкие
3)eat-pizza
4)season-winter
5)sity>usa<sity>
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
--code skills.txt
1)skills-Инструменты тестирования, логи, базы данных , баг репорты, и тд

 12. Сделать коммит в одну строку.--$ git add ./  $ git commit -am "new"
 13. Отправить сразу 2 файла на внешний репозиторий.--git push
 14. На веб интерфейсе создать файл bug_report.txt.-- add file -> create new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.--edit this file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.--Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT--git pull
